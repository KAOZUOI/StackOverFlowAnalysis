public int getCountReprintHistory(String request_date, String statement_type, String option_type, String cust_no) {    String sql = &quot;&quot;;    Integer count=0;    Connection conn = null;    PreparedStatement pstmt = null;    ResultSet rs = null;        try{        conn = jdbcTemplate.getDataSource().getConnection();        if ( request_date.equals(&quot;&quot;) && statement_type.equals(&quot;&quot;) && option_type.equals(&quot;&quot;) && cust_no.equals(&quot;&quot;) ) {        sql += &quot;SELECT COUNT(REPRINTLOG_DATE) FROM TBL_REPRINT_HISTORY2 &quot;;        sql += &quot;ORDER BY REPRINTLOG_JOBID DESC &quot;;         pstmt = conn.prepareStatement(sql);         rs = pstmt.executeQuery();         while(rs.next()){             count = rs.getInt(1);                                  }    } else {                            sql += &quot;SELECT COUNT(REPRINTLOG_DATE) FROM TBL_REPRINT_HISTORY2 &quot;;        sql += &quot;WHERE TO_CHAR(REPRINTLOG_DATE,'dd/mm/yyyy') LIKE ? &quot;;        sql += &quot;AND REPRINTLOG_STATEMENT_TYPE LIKE ? &quot;;        sql += &quot;AND REPRINTLOG_OPTION_TYPE LIKE ? &quot;;        sql += &quot;AND REPRINTLOG_CUSTOMER_NO LIKE ? &quot;;        sql += &quot;ORDER BY REPRINTLOG_JOBID DESC &quot;;                 pstmt = conn.prepareStatement(sql);         pstmt.setString(1,&quot;%&quot;+request_date+ &quot;%&quot;);         pstmt.setString(2,&quot;%&quot;+ statement_type+ &quot;%&quot;);         pstmt.setString(3,&quot;%&quot;+ option_type+ &quot;%&quot;);         pstmt.setString(4,&quot;%&quot;+ cust_no+ &quot;%&quot;);         rs = pstmt.executeQuery();                  while(rs.next()){             count = rs.getInt(1);                                  }     }      }catch(Exception e){        System.out.println(&quot;[reprintHistory count] Exception :&quot;+e.getMessage());        e.printStackTrace();      } finally {           if (rs != null) {               try {                   rs.close();                   rs = null;               } catch (SQLException e) {                   e.printStackTrace();;               }           }                if (pstmt != null) {               try {                   pstmt.close();                   pstmt = null;               } catch (SQLException e) {                   e.printStackTrace();               }           }           try {               if (conn!= null && !conn.isClosed()){                   conn.close();                   conn= null;               }           } catch (SQLException e) {               e.printStackTrace();           }       }    return count;} 