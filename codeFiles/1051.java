package eu.nts.nmp.csm.mac.api.generated.model.avl;import java.time.OffsetDateTime;import java.util.ArrayList;import java.util.List;import java.util.UUID;import javax.validation.constraints.*;import javax.validation.Valid;import java.util.Objects;import com.fasterxml.jackson.annotation.JsonProperty;import com.fasterxml.jackson.annotation.JsonCreator;import com.fasterxml.jackson.annotation.JsonValue;@javax.annotation.Generated(value = &quot;org.openapitools.codegen.languages.JavaJAXRSSpecServerCodegen&quot;, date = &quot;2023-03-14T16:46:37.723499+01:00[Europe/Vienna]&quot;)public class MaintenanceWindowAVRDto   {    private @Valid UUID id;  private @Valid OffsetDateTime start;  private @Valid OffsetDateTime end;  private @Valid List<Long> hosts = new ArrayList<>();  /**   * id of maintenance window   **/  public MaintenanceWindowAVRDto id(UUID id) {    this.id = id;    return this;  }      @JsonProperty(&quot;id&quot;)  @NotNull  public UUID getId() {    return id;  }  public void setId(UUID id) {    this.id = id;  }/**   * when the maintenance window is going to start   **/  public MaintenanceWindowAVRDto start(OffsetDateTime start) {    this.start = start;    return this;  }      @JsonProperty(&quot;start&quot;)  @NotNull  public OffsetDateTime getStart() {    return start;  }  public void setStart(OffsetDateTime start) {    this.start = start;  }/**   * when the maintenance is going to end   **/  public MaintenanceWindowAVRDto end(OffsetDateTime end) {    this.end = end;    return this;  }      @JsonProperty(&quot;end&quot;)  @NotNull  public OffsetDateTime getEnd() {    return end;  }  public void setEnd(OffsetDateTime end) {    this.end = end;  }/**   **/  public MaintenanceWindowAVRDto hosts(List<Long> hosts) {    this.hosts = hosts;    return this;  }      @JsonProperty(&quot;hosts&quot;)  @NotNull  public List<Long> getHosts() {    return hosts;  }  public void setHosts(List<Long> hosts) {    this.hosts = hosts;  }  @Override  public boolean equals(Object o) {    if (this == o) {      return true;    }    if (o == null || getClass() != o.getClass()) {      return false;    }    MaintenanceWindowAVRDto maintenanceWindowAVRDto = (MaintenanceWindowAVRDto) o;    return Objects.equals(this.id, maintenanceWindowAVRDto.id) &&        Objects.equals(this.start, maintenanceWindowAVRDto.start) &&        Objects.equals(this.end, maintenanceWindowAVRDto.end) &&        Objects.equals(this.hosts, maintenanceWindowAVRDto.hosts);  }  @Override  public int hashCode() {    return Objects.hash(id, start, end, hosts);  }  @Override  public String toString() {    StringBuilder sb = new StringBuilder();    sb.append(&quot;class MaintenanceWindowAVRDto {\n&quot;);        sb.append(&quot;    id: &quot;).append(toIndentedString(id)).append(&quot;\n&quot;);    sb.append(&quot;    start: &quot;).append(toIndentedString(start)).append(&quot;\n&quot;);    sb.append(&quot;    end: &quot;).append(toIndentedString(end)).append(&quot;\n&quot;);    sb.append(&quot;    hosts: &quot;).append(toIndentedString(hosts)).append(&quot;\n&quot;);    sb.append(&quot;}&quot;);    return sb.toString();  }  /**   * Convert the given object to string with each line indented by 4 spaces   * (except the first line).   */  private String toIndentedString(Object o) {    if (o == null) {      return &quot;null&quot;;    }    return o.toString().replace(&quot;\n&quot;, &quot;\n    &quot;);  }}