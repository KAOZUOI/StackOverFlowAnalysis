import apache_beam as beamimport apache_beam.io.jdbc as jdbcimport typingimport apache_beam.coders as codersimport osfrom apache_beam.options.pipeline_options import PipelineOptionspipeline_options = {    'runner': 'PortableRunner',    'job_endpoint': 'localhost:8099',    'environment_type':'LOOPBACK'}pipeline_options = PipelineOptions.from_dictionary(pipeline_options)ExampleRow = typing.NamedTuple('ExampleRow',                               [('id', int), ('migration', bytes)])coders.registry.register_coder(ExampleRow, coders.RowCoder)with beam.Pipeline(options=pipeline_options) as p:    res = (        p        | &quot;Read database list&quot; >> jdbc.ReadFromJdbc(            table_name='migrations',            driver_class_name='com.mysql.jdbc.Driver',            jdbc_url='jdbc:mysql://localhost:3306/database',            username='user',            password='pass',            query = &quot;select id, migration from database.migrations;&quot;,            fetch_size=1,            expansion_service=&quot;localhost:8096&quot;        )        | &quot;Print results&quot; >> beam.Map(print)    )