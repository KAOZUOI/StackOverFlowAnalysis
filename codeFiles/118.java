import apache_beam as beamimport apache_beam.io.jdbc as jdbcimport typingimport apache_beam.coders as codersimport osfrom apache_beam.options.pipeline_options import PipelineOptionspipeline_options = {    'project': 'project-name',    'runner': 'DataflowRunner',    'region': 'europe-central2',    'staging_location':&quot;gs://temp&quot;,    'temp_location':&quot;gs://temp&quot;,    'template_location':&quot;gs://template/gcsql&quot;}pipeline_options = PipelineOptions.from_dictionary(pipeline_options)serviceAccount = r'C:\Path\To\Service\Account.json'os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = serviceAccountExampleRow = typing.NamedTuple('ExampleRow',                               [('id', int), ('migration', str)])coders.registry.register_coder(ExampleRow, coders.RowCoder)with beam.Pipeline(options=pipeline_options) as p:    res = (        p        | &quot;Read database list&quot; >> jdbc.ReadFromJdbc(            table_name='migrations',            driver_class_name='com.mysql.jdbc.Driver',            jdbc_url='jdbc:mysql:///<DATABASE_NAME>?cloudSqlInstance=<INSTANCE_CONNECTION_NAME>&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=<MYSQL_USER_NAME>&password=<MYSQL_USER_PASSWORD>',            username='user',            password='pass',            query = &quot;select id, migration from bob1.migrations;&quot;,            fetch_size=1,            classpath=[&quot;com.google.cloud.sql:mysql-socket-factory-connector-j-8:1.7.2&quot;],            expansion_service='localhost:8096'        )        | &quot;Print results&quot; >> beam.io.WriteToText(r'gs://output/gcsql.csv')    )