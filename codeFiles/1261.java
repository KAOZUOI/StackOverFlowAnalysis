public class owner_login extends AppCompatActivity {    EditText textEmail, textPswd;    Button buttonSignupOwner, buttonLogin;    FirebaseAuth mAuth;    private DatabaseReference mDatabase;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_owner_login);        FirebaseAnalytics.getInstance(this).setAnalyticsCollectionEnabled(true);        FirebaseAnalytics.getInstance(this).setUserProperty(&quot;debug&quot;, &quot;true&quot;);        mAuth = FirebaseAuth.getInstance();        mDatabase = FirebaseDatabase.getInstance().getReference().child(&quot;owners&quot;);        textEmail = findViewById(R.id.editTextEmail);        textPswd = findViewById(R.id.editTextPassword);        buttonLogin = findViewById(R.id.buttonLogin);        buttonLogin.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String email = textEmail.getText().toString().trim();                String password = textPswd.getText().toString().trim();                if (TextUtils.isEmpty(email)) {                    textEmail.setError(&quot;Email is required&quot;);                    return;                }                if (TextUtils.isEmpty(password)) {                    textPswd.setError(&quot;Password is required&quot;);                    return;                }                mAuth.signInWithEmailAndPassword(email, password).addOnCompleteListener(new OnCompleteListener < AuthResult > () {                    @Override                    public void onComplete(@NonNull Task\ < AuthResult\ > task) {                        if (task.isSuccessful()) {                            FirebaseUser user = mAuth.getCurrentUser();                            String userId = user.getUid();                            mDatabase.child(userId).addValueEventListener(new ValueEventListener() {                                @Override                                public void onDataChange(@NonNull DataSnapshot snapshot) {                                    String username = snapshot.child(&quot;username&quot;).getValue(String.class);                                    String email = snapshot.child(&quot;email&quot;).getValue(String.class);                                    Intent intent = new Intent(owner_login.this, owners_Profile.class);                                    intent.putExtra(&quot;username&quot;, username);                                    intent.putExtra(&quot;email&quot;, email);                                    startActivity(intent);                                    finish();                                }                                @Override                                public void onCancelled(@NonNull DatabaseError error) {                                    Toast.makeText(owner_login.this, &quot;Failed to retrieve user information&quot;, Toast.LENGTH_SHORT).show();                                }                            });                        } else {                            Toast.makeText(owner_login.this, &quot;Authentication failed&quot;, Toast.LENGTH_SHORT).show();                        }                    }                });            }        });    }}