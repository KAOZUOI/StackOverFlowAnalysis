public class VendingMachineBlock extends Block {    private static final VoxelShape SHAPE = Block.createCuboidShape(0, 0, 0, 16, 32, 16);    public VendingMachineBlock() {        super(Settings.of(Material.METAL)                .nonOpaque()                .strength(4.0f)                .requiresTool()                .sounds(BlockSoundGroup.METAL)        );    }    public VoxelShape getOutlineShape(BlockState state, BlockView world, BlockPos pos, ShapeContext context) {        return SHAPE;    }    public VoxelShape getCollisionShape(BlockState state, BlockView world, BlockPos pos, ShapeContext context) {        return SHAPE;    }    @Override    public boolean canReplace(BlockState state, ItemPlacementContext context) {        BlockPos pos = context.getBlockPos();        if (context.getWorld().getBlockState(pos.down()).isOf(this)) {            // Prevent block placement in the top part of the VendingMachineBlock            return false;        }        return super.canReplace(state, context);    }    @Override    public ActionResult onUse(BlockState state, World world, BlockPos pos, PlayerEntity player, Hand hand, BlockHitResult hit) {        double relativeHitY = hit.getPos().y - pos.getY();        if (relativeHitY > 0.5 || relativeHitY < 0) {            // Player is interacting with the top or bottom part of the VendingMachineBlock            if (!world.isClient) {                player.sendMessage(Text.of(&quot;Hello, world!&quot;), false);            }            return ActionResult.SUCCESS;        }        return super.onUse(state, world, pos, player, hand, hit);    }}