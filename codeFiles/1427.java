public class ReadCertainLines_Best {    ReadCertainLines_Best() {        String csvFile = &quot;your csv file here&quot;;        int linesToKeep = 10;        printThem(ReadCertainLines(csvFile, linesToKeep));    }    public static void main(String[] args) {        new ReadCertainLines_Best();    }    public HashMap<String, Object> ReadCertainLines(String csvFile, int linesToKeep) {        byte[] buffer = new byte[1024];        StringBuilder sb = new StringBuilder();        HashMap<String, Object> map = new HashMap<>();        try (RandomAccessFile file = new RandomAccessFile(csvFile, &quot;r&quot;)) {            // Find the last line ending position            long fileLength = file.length();            long filePointer = fileLength - 1;            int lineCount = 0;            while (filePointer >= 0 && lineCount < linesToKeep) {                file.seek(filePointer);                byte c = file.readByte();                if (c == '\n' || c == '\r') {                    lineCount++;                }                filePointer--;            }            // Read the last 10 lines            while (true) {                int bytesRead = file.read(buffer);                if (bytesRead == -1) {                    break;                }                for (int i = 0; i < bytesRead; i++) {                    sb.append((char) buffer[i]);                }            }            String[] lines = sb.toString().split(&quot;\n&quot;);            // Print the last 10 lines            int startIndex = lines.length > linesToKeep ? lines.length - linesToKeep : 0;            map.put(&quot;startIndex&quot;, startIndex);            map.put(&quot;length&quot;, lines.length);            map.put(&quot;lines&quot;, lines);//            for (int i = startIndex; i < lines.length; i++) {//                System.out.println(lines[i]);//            }        } catch (IOException e) {            e.printStackTrace();        }        return map;    }    public void printThem(HashMap<String, Object> map) {        for (int i = (int) map.get(&quot;startIndex&quot;); i < (int) map.get(&quot;length&quot;); i++) {            System.out.println(((String[]) map.get(&quot;lines&quot;))[i]);        }    }}