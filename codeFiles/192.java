package com.portfolio.todoapp.asoviewtodo.Controller;import com.portfolio.todoapp.asoviewtodo.SignupForm;import com.portfolio.todoapp.asoviewtodo.Service.UserDetailsServiceImpl;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.dao.DataAccessException;import org.springframework.security.authentication.AnonymousAuthenticationToken;import org.springframework.security.core.Authentication;import org.springframework.security.core.context.SecurityContext;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.validation.BindingResult;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.CrossOrigin;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;@Controller@RequestMapping(&quot;/&quot;)@CrossOrigin(&quot;http://localhost:3000&quot;)public class TestController {    @Autowired    UserDetailsServiceImpl userDetailsServiceImpl;    @GetMapping(&quot;/login&quot;)    public String login() {        return &quot;login&quot;;    }    @GetMapping(&quot;/signup&quot;)    public String newSignup(SignupForm signupForm) {        return &quot;signup&quot;;    }    @PostMapping(&quot;/signup&quot;)    public String signup(@Validated SignupForm signupForm, BindingResult result , Model model, HttpServletRequest request) {        try {            userDetailsServiceImpl.register(signupForm.getEmail(), signupForm.getPassword(), &quot;ROLE_USER&quot;);        }catch (DataAccessException e) {            model.addAttribute(&quot;signupError&quot;, &quot;fail to signup&quot;);        }        result.hasErrors();        if(result.hasErrors()) {            return &quot;signup&quot;;        }        SecurityContext context = SecurityContextHolder.getContext();        Authentication authentication = context.getAuthentication();        if(authentication instanceof AnonymousAuthenticationToken == false) {            SecurityContextHolder.clearContext();        }        try {            request.login(signupForm.getEmail(), signupForm.getPassword());        } catch(ServletException e) {            e.printStackTrace();        }        return &quot;redirect:/&quot;;    }}