private MyTaskResult doTasks( ... ) {      try ( var scope = new StructuredTaskScope.ShutdownOnFailure() ) {        var negTask =        MyTask.create(          ...        );        var posTask =        MyTask.create(          ...        );        var negTaskFuture = (        CoreConfig.useMultipleThreads() ?        scope.fork( negTask::task ) :        new ImmediateFuture<>( negTask.task() )      );            var posTaskFuture = (        CoreConfig.useMultipleThreads() ?        scope.fork( posTask::task) :        new ImmediateFuture<>( posTask.task() )      );        scope.join();      scope.throwIfFailed();        return new MyTaskResult(        negTaskFuture.resultNow(),        posTaskFuture.resultNow()      );      }    catch ( InterruptedException | ExecutionException ex ) {      throw new Error( ex );    }      }