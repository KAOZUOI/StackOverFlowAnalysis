public class AlarmReceiver extends BroadcastReceiver {    @Override    public void onReceive(Context context, Intent intent) {        Vibrator vibrator = (Vibrator) context.getSystemService(Context.VIBRATOR_SERVICE);        vibrator.vibrate(VibrationEffect.DEFAULT_AMPLITUDE);        String event = intent.getStringExtra(&quot;title&quot;);        String comment = intent.getStringExtra(&quot;comment&quot;);        Intent activityIntent = new Intent(context, MainActivity.class);        PendingIntent pendingIntent = PendingIntent.getActivity( context,0,activityIntent,0 );        String text = &quot;Reminder for the Event: &quot; + &quot;\n&quot; + event + &quot;\n&quot; + &quot;Comments: &quot; + &quot;\n&quot; + comment;        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, &quot;myandroid&quot;)                .setSmallIcon(R.drawable.alarm)                .setContentTitle(event)                .setContentText(text)                .setAutoCancel(true)                .setStyle(new NotificationCompat.BigTextStyle()                        .bigText(text))                .setContentIntent(pendingIntent)                .setDeleteIntent(pendingIntent)                .setDefaults(NotificationCompat.DEFAULT_ALL)                .setPriority(NotificationCompat.PRIORITY_HIGH);        NotificationManagerCompat notificationManagerCompat = NotificationManagerCompat.from(context);        notificationManagerCompat.notify(123,builder.build());        Notification notification1 = builder.build();        notification1.flags |= Notification.FLAG_AUTO_CANCEL;        Uri notification = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM);        Ringtone r = RingtoneManager.getRingtone(context, notification);        r.play();        final Handler handler = new Handler();        handler.postDelayed(new Runnable() {            @Override            public void run() {                if (r.isPlaying())                    r.stop();            }        },1000*10 );    }}