// this handles the actual build script (build.gradle) dependencies!buildscript {    repositories {        flatDir {            // to use local builds            dirs 'libs'        }    }    dependencies {        classpath fileTree(include: ['*.jar'], dir: 'libs')        classpath files('libs/jwebassembly-gradle-0.4.jar')        classpath files('libs/jwebassembly-gradle-0.4-sources.jar')        classpath files('libs/jwebassembly-gradle-0.4-javadoc.jar')    }}plugins {    id 'java'    id 'application'    id 'jwebassembly-gradle'}repositories {    flatDir {        // to use local builds        dirs 'libs'    }    mavenCentral()}jar {    manifest {        attributes(            &quot;Specification-Title&quot; : &quot;&quot;,            &quot;Specification-Version&quot; : project.version,            &quot;Specification-Vendor&quot; : &quot;&quot;,            &quot;Implementation-Title&quot; : project.group,            &quot;Implementation-Version&quot; : project.version,            &quot;Implementation-Vendor&quot; : &quot;&quot;,            &quot;Main-Class&quot; : &quot;com.myproject.UrlImageGrabber&quot;        )    }}dependencies {    classpath fileTree(include: ['*.jar'], dir: 'libs')    classpath files('libs/jwebassembly-gradle-0.4.jar')    classpath files('libs/jwebassembly-gradle-0.4-sources.jar')    classpath files('libs/jwebassembly-gradle-0.4-javadoc.jar')    // other dependencies ..}task sourcesJar(type: Jar) {   archiveBaseName=artifactBaseName   classifier 'sources'   from sourceSets.main.allSource}task javadocJar(type: Jar, dependsOn: javadoc) {   archiveBaseName=artifactBaseName   classifier 'javadoc'   from javadoc.destinationDir}task(debug, dependsOn: 'classes', type: JavaExec) {    main = mainClassName    classpath = sourceSets.main.runtimeClasspath    args ''    debug true}//task webAssembly() {////}build {    doLast {//        webAssembly()    }}artifacts {   archives sourcesJar   archives javadocJar}