  @Override  protected void writeInternal(Object object, @Nullable Type type, HttpOutputMessage outputMessage)      throws IOException, HttpMessageNotWritableException {    if( outputMessage.getHeaders().getContentLength() < 0 ) {      ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();      HttpOutputMessage newOutputMessage = new HttpOutputMessage() {        @Override        public OutputStream getBody() {          return byteArrayOutputStream;        }        @Override        public HttpHeaders getHeaders() {          return outputMessage.getHeaders();        }      };      super.writeInternal(object, type, newOutputMessage);      byteArrayOutputStream.flush();      byteArrayOutputStream.close();      HttpHeaders headers = outputMessage.getHeaders();      headers.setContentLength(byteArrayOutputStream.toByteArray().length);      StreamUtils.copy(byteArrayOutputStream.toByteArray(), outputMessage.getBody());    } else {      super.writeInternal(object, type, outputMessage);    }  }