@Configuration@EnableWebSecurity@ComponentScan@EnableGlobalMethodSecurity(        prePostEnabled = true,        securedEnabled = true,        jsr250Enabled = true)public class WebSecurityConfiguration extends WebSecurityConfigurerAdapter{        @Autowired        private UserDetailsService userDetailsService;        @Bean        AuthenticationProvider authenticationProvider() {            DaoAuthenticationProvider provider                     = new DaoAuthenticationProvider();            provider.setUserDetailsService(userDetailsService);            provider.setPasswordEncoder(new BCryptPasswordEncoder());            return  provider;        }        @Override        protected void configure(HttpSecurity http) throws Exception {             http                .authorizeRequests()                .antMatchers(HttpMethod.POST, &quot;/**&quot;)                .hasAuthority(&quot;ADMIN&quot;)                .antMatchers(HttpMethod.DELETE, &quot;/**&quot;)                .hasAuthority(&quot;ADMIN&quot;)                .antMatchers(HttpMethod.PUT, &quot;/**&quot;)                .hasAuthority(&quot;ADMIN&quot;)                .antMatchers(HttpMethod.GET, &quot;/**&quot;)                .hasAuthority(&quot;ADMIN&quot;)                 .antMatchers(HttpMethod.GET, &quot;/tools&quot;)                .hasAuthority(&quot;USER&quot;)                .anyRequest()                .authenticated()                .and()                .cors()                .and()                .exceptionHandling()                .and()                .sessionManagement()                .sessionCreationPolicy(SessionCreationPolicy.STATELESS)                .and()                .csrf()                .disable();        }  }