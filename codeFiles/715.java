  public Mono<AvailableResponse> getAvailableDiversionsForObject(final int objectId,                             final EventsRequest eventsRequest) {    return webclient        .method(HttpMethod.GET)        .uri(&quot;available/{objectId}&quot;, objectId)        .body(Mono.just(eventsRequest), EventsRequest .class)        .accept(MediaType.APPLICATION_JSON)        .retrieve()        .onStatus(HttpStatus.NOT_FOUND::equals, r -> Mono.empty())        .onStatus(HttpStatus::isError, response -> Mono.error(WebClientResponseException.create(                      response.statusCode().value(),                      response.statusCode().getReasonPhrase(),                      response.headers().asHttpHeaders(),                      null,                      null                  ))        )        .bodyToMono(AvailableResponse.class)        .doOnError(throwable -> log.error(SERVICE_ERROR, throwable.getMessage()));}