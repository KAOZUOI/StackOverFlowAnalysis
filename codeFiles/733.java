// called from webclient.exchange().flatMap(this::responseFromWebClientExchange)private Mono<byte[]> responseFromWebClientExchange(ClientResponse response) { return response        .body(BodyExtractors.toDataBuffers())        .map(dataBuffer -> {            ByteBuffer byteBuffer = dataBuffer.asByteBuffer();            byte[] byteArray = new byte[byteBuffer.remaining()];            byteBuffer.get(byteArray); // do something with the response bytes, not important for this example            DataBufferUtils.release(dataBuffer); // RELEASE the buffer, without this call memory will leak            return byteArray;        })        .reduce(Bytes::concat);}// called from webClient  .get()  .uri(uri)  .exchange()  .flatMap(this::responseFromWebClientExchange)