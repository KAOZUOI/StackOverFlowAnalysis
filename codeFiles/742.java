import android.app.Activity;import android.app.ActivityManager;import android.app.admin.DevicePolicyManager;import android.content.ComponentName;import android.content.Context;import android.content.SharedPreferences;import android.os.UserManager;import android.widget.Toast;import com.example.isense.R;public class KioskHandler {    static ComponentName mAdminComponentName;    static DevicePolicyManager mDevicePolicyManager;    public static void startKiosk(Activity context){       if(mDevicePolicyManager.isLockTaskPermitted(context.getPackageName())){            ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);            if (am.getLockTaskModeState() == ActivityManager.LOCK_TASK_MODE_NONE) {                setDefaultCosuPolicies(true);                context.startLockTask();                          }        }    }    public static void stopKiosk(Activity context){        ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);        if (am.getLockTaskModeState() == ActivityManager.LOCK_TASK_MODE_LOCKED) {            context.stopLockTask();            setDefaultCosuPolicies(false);                               }    }    public static boolean initialize(Context context){        try{            mAdminComponentName = new ComponentName(context, AppAdminReceiver.class);            mDevicePolicyManager = (DevicePolicyManager) context.getSystemService(Context.DEVICE_POLICY_SERVICE);            String[] packages={                    context.getPackageName(),                    &quot;com.android.date&quot;,                    &quot;com.android.settings.date&quot;,                    &quot;com.android.bluetooth&quot;,                    &quot;com.bluetooth&quot;,                    &quot;com.Bluetooth&quot;,                    &quot;com.samsung&quot;,                    &quot;com.wifi&quot;,                    &quot;com.android.wifi&quot;,                    &quot;com.android.settings.bluetooth&quot;,                    &quot;com.android.settings.wifi&quot;            } ;            mDevicePolicyManager.setLockTaskPackages(mAdminComponentName,packages);            if(mDevicePolicyManager.isDeviceOwnerApp(context.getPackageName())){                // App is whitelisted                setDefaultCosuPolicies(true);                return true;            }            else {                return false;            }        }        catch (Exception ignored){return false;}    }    private static void setDefaultCosuPolicies(boolean active){        // Set user restrictions        setUserRestriction(UserManager.DISALLOW_SAFE_BOOT, active);        setUserRestriction(UserManager.DISALLOW_FACTORY_RESET, active);        setUserRestriction(UserManager.DISALLOW_ADD_USER, active);        setUserRestriction(UserManager.DISALLOW_MOUNT_PHYSICAL_MEDIA, active);        setUserRestriction(UserManager.DISALLOW_USB_FILE_TRANSFER,active);        // Disable keyguard and status bar        mDevicePolicyManager.setKeyguardDisabled(mAdminComponentName, active);        mDevicePolicyManager.setStatusBarDisabled(mAdminComponentName, active);    }    private static void setUserRestriction(String restriction, boolean disallow){        if (disallow) {            mDevicePolicyManager.addUserRestriction(mAdminComponentName,restriction);        } else {            mDevicePolicyManager.clearUserRestriction(mAdminComponentName,restriction);        }    }}