public class SchemaRegistryContainer extends GenericContainer<SchemaRegistryContainer> {    public static final String SCHEMA_REGISTRY_IMAGE =            &quot;confluentinc/cp-schema-registry&quot;;    public static final int SCHEMA_REGISTRY_PORT = 8081;    public SchemaRegistryContainer() {        this(CONFLUENT_PLATFORM_VERSION);    }    public SchemaRegistryContainer(String version) {        super(SCHEMA_REGISTRY_IMAGE + &quot;:&quot; + version);        waitingFor(Wait.forHttp(&quot;/subjects&quot;).forStatusCode(200));        withExposedPorts(SCHEMA_REGISTRY_PORT);    }    public SchemaRegistryContainer withKafka(KafkaContainer kafka) {        return withKafka(kafka.getNetwork(), kafka.getNetworkAliases().get(0) + &quot;:9092&quot;);    }    public SchemaRegistryContainer withKafka(Network network, String bootstrapServers) {        withNetwork(network);        withEnv(&quot;SCHEMA_REGISTRY_HOST_NAME&quot;, &quot;schema-registry&quot;);        withEnv(&quot;SCHEMA_REGISTRY_LISTENERS&quot;, &quot;http://0.0.0.0:8081&quot;);        withEnv(&quot;SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS&quot;, &quot;PLAINTEXT://&quot; + bootstrapServers);        return self();    }}