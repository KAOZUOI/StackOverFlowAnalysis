 public class JwtClientInterceptor implements ClientInterceptor { private final Supplier<String> jwtToken; public JwtClientInterceptor(Supplier<String> jwtToken) {     this.jwtToken = jwtToken; } @Override public boolean handleRequest(MessageContext messageContext) {     SoapMessage soapMessage = (SoapMessage) messageContext. getRequest();     SoapHeader soapHeader = soapMessage.getSoapHeader();     soapHeader.addHeaderElement(new QName(&quot;authorization&quot;))             .setText(String. format(&quot;Bearer %s&quot;, jwtToken.get()));     return true; } @Override public boolean handleResponse(MessageContext messageContext) throws WebServiceClientException {     return true; } @Override public boolean handleFault(MessageContext messageContext) throws WebServiceClientException {     return true; } @Override public void afterCompletion(MessageContext messageContext, Exception ex) throws WebServiceClientException { }