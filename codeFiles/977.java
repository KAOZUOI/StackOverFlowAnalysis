    public void saveImage(Context myContext, String myDataset) throws IOException {    AssetManager assetManager = Objects.requireNonNull(myContext).getAssets();    String[] archives = null;    String archiveName = myDataset + &quot;.7z&quot;;    String archivePath = Environment.getExternalStorageDirectory() + &quot;/&quot; + archiveName;    File archive = new File(archivePath);    File picturesFolder = new File(myContext.getExternalFilesDir(null).getParent(), &quot;Pictures&quot;);    picturesFolder.mkdirs();    try {        archives = assetManager.list(&quot;photos/&quot;+myDataset+&quot;/&quot;+&quot;archive&quot;);    } catch (IOException e) {        Log.e(&quot;tag&quot;, &quot;Failed to get asset file list.&quot;, e);    }    if (archives != null) {            InputStream in;            OutputStream out;            try {                in = assetManager.open(&quot;photos/&quot; + myDataset + &quot;/&quot; +&quot;archive&quot;+ &quot;/&quot; +&quot;dataset3.7z&quot;);                File outFile = new File(Environment.getExternalStorageDirectory() + &quot;/&quot; + archiveName);                out = new FileOutputStream(outFile);                copyFile(in, out);                in.close();                out.flush();                out.close();                extract7z(archive, picturesFolder);                MediaScannerConnection.scanFile(myContext, new String[]{outFile.toString()}, null, new MediaScannerConnection.OnScanCompletedListener() {                    @Override                    public void onScanCompleted(String path, Uri uri) {                        Log.i(&quot;External Storage&quot;, &quot;Scanned&quot; + path + &quot;:&quot;);                        Log.i(&quot;External Storage&quot;, &quot;uri &quot; + uri);                    }                });            } catch (IOException e) {                Log.e(&quot;tag&quot;, &quot;Failed to copy asset file: &quot; + archiveName, e);        }    } else {        Log.e(&quot;Error NPE&quot;, &quot;null&quot;);    }}